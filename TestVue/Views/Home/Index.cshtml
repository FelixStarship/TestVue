@{

}

<style type="text/css">
    .active {
        font-size: inherit;
    }
</style>
<script src="~/Scripts/vue.js"></script>

@*<div id="app">
       <p>{{message}}</p>
       <input type="text" v-model="message" />
    </div>*@

@*<div id="app">
      <h1>Hello,Vue.js!</h1>
      <h1 v-if="yes">yes</h1>
      <h1 v-if="no">no</h1>
      <h1 v-if="age>=25">age:{{age}}</h1>
      <h1 v-if="name.indexOf('jack')>=0">name:{{name}}</h1>
    </div>*@

@*<div id="app">
       <h1>Hello,Vue.js!</h1>
       <h1 v-show="yes">yes!</h1>
       <h1 v-show="no">no!</h1>
       <h1 v-show="age>=25">age:{{age}}</h1>
       <h1 v-show="name.indexOf('jack')>=0">name:{{name}}</h1>
    </div>*@

@*<div id="app">
        <h1 v-if="age>=25">age:{{age}}</h1>
        <h1 v-else>name:{{name}}</h1>
        <h1>-------------------------分割线----------------------------</h1>
        <h1 v-show="name.indexOf('keep')>=0">name:{{name}}</h1>
        <h1 v-else>sex:{{sex}}</h1>
    </div>*@

@*<div id="app">
      <table>
         <thead>
             <tr>
               <th>Name</th>
               <th>Age</th>
               <th>Sex</th>
             </tr>
         </thead>
         <tbody>
            <tr v-for="person in people">
              <td>{{person.name}}</td>
              <td>{{person.age}}</td>
              <td>{{person.sex}}</td>
            </tr>
         </tbody>
      </table>
    </div>*@



@*<div id="app">
      <ul>
        <li v-for="n in PageCount">
            <h1 v-bind:class="activeNumber==n+1?'active':''">{{n+1}}</h1>
        </li>
      </ul>
    </div>*@

@*<div id="app">
      <p><input type="text" v-model="message" /></p>
      <p>
        <button @@click="greet">Greet</button>
      </p>

      <p>
        <button @@click="say('Hi')">Hi</button>
      </p>
    </div>*@


<div id="app1">
    <!-- 3. #app是Vue实例挂载的元素，应该在挂载元素范围内使用组件-->
    <my-component></my-component>
</div>







<!--骆驼拼写法-->
<div id="app">
    <table>
        <tr>
            <th colspan="3">父组件数据</th>
        </tr>
        <tr>
            <td>name</td>
            <td>{{name}}</td>
            <td><input type="text" v-model="name" /></td>
        </tr>
        <tr>
            <td>age</td>
            <td>{{age}}</td>
            <td><input type="text" v-model="age" /></td>
        </tr>
        <tr>
            <td>chese</td>
            <td>{{chese}}</td>
            <td><input type="text" v-model="chese" /></td>
        </tr>
    </table>
    
    <parent-component v-bind:my-Name="name" v-bind:my-Age="age" v-bind:my-Chese="chese">

    </parent-component>
</div>

<template id="myComponent">
    <table>
        <tr>
            <th colspan="3">
                子组件数据
            </th>
        </tr>
        <tr>
            <td>my name</td>
            <td>{{myName}}</td>
            <td><input type="text" v-model="myName" /></td>
        </tr>
        <tr>
            <td>my age</td>
            <td>{{myAge}}</td>
            <td><input type="text" v-model="myAge" /></td>
        </tr>
        <tr>
            <td>my chese</td>
            <td>{{myChese}}</td>
            <td><input type="text" v-model="myChese" /></td>
        </tr>
    </table>
</template>




<script type="text/javascript">


    /*prop默认单项绑定*/
    var vm = new Vue({
        el: "#app",
        data: {
            name: "keepfool",
            age: 58,
            chese: "体重"
        },
        components: {
            'parent-component': {
                template: '#myComponent',
                props: ['myName', 'myAge', 'myChese']
            }
        }
    });



    //var exampleData ={
    //    message:'Hello Word!'
    //};
    //new Vue({
    //    el: '#app',
    //    data: exampleData
    //});

    //var vm = new Vue({
    //    el:'#app',
    //    data:{
    //        yes: true,
    //        no: false,
    //        age: 28,
    //        name: 'keepfool'
    //    }
    //});

    //var vm = new Vue({
    //    el: '#app',
    //    data: {
    //        yes: true,
    //        no: false,
    //        age: 28,
    //        name:'keepfool'
    //    }
    //});

    //var vm = new Vue({
    //    el: '#app',
    //    data: {
    //        age: 28,
    //        name: 'keepfool',
    //        sex: 'Male'
    //    }
    //});

    //var vm = new Vue({
    //     el: '#app',
    //     data: {
    //         people: [{
    //             name: 'jack',
    //             age: 30,
    //             sex:'Male'
    //         },
    //         {
    //             name: 'bill',
    //             age: 26,
    //             sex: 'Male'
    //         },
    //         {
    //             name: 'tracy',
    //             age: 22,
    //             sex: 'Male'
    //         },
    //         {
    //             name: 'chris',
    //             age: 25,
    //             sex: 'Male'
    //         }
    //         ]
    //     }
    // });

    //var vm = new Vue({
    //    el: '#app',
    //    data: {
    //        activeNumber: 2,
    //        PageCount:10
    //    }
    //});

    //var vm = new Vue({
    //    el: '#app',
    //    data: {
    //        message:'Hello,Vue,js'
    //    },
    //    methods:{
    //        greet: function ()
    //        {
    //            alert(this.message);
    //        },
    //        say: function (msg)
    //        {
    //            alert(msg);
    //        }
    //    }
    //});



    // // 1.创建一个组件构造器
    // var myComponent = Vue.extend({
    //     template: '<div>这是一个Vue组件!</div>'
    // })

    // // 2.注册组件，并指定组件的标签，组件的HTML标签为<my-component>
    // //Vue.component('my-component', myComponent)

    //new Vue({
    //    el: '#app1',
    //    components: {
    //        'my-component': myComponent
    //    }
    //});


    //var Child = Vue.extend({
    //    template: '<p>This is a child component!</p>'
    //})

    //var Parent = Vue.extend({
    //    // 在Parent组件内使用<child-component>标签
    //    //template: '<p>This is a Parent component</p><child-component></child-component>',
    //    components: {
    //        // 局部注册Child组件，该组件只能在Parent组件内使用
    //        'child-component': Child
    //    }
    //})

    //// 全局注册Parent组件
    //Vue.component('parent-component', Child)

    //new Vue({
    //    el: '#app'
    //})







</script>
